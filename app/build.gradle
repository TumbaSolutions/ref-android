buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
	compileSdkVersion 22
	buildToolsVersion "22.0.1"

	defaultConfig {
		applicationId "solutions.tumba.refandroid"
		minSdkVersion 21
		targetSdkVersion 22
		versionCode 1
		versionName "1.0"
	}

	signingConfigs {
		release {
			storeFile file("release.keystore")
			storePassword "pass1234"
			keyAlias "app"
			keyPassword "pass1234"
		}
	}

	buildTypes {
		debug {
			// disable crashlytics
			buildConfigField "boolean", "USE_CRASHLYTICS", "false"
			ext.enableCrashlytics = false
		}

		release {
			signingConfig signingConfigs.release

			// enable crashlytics
			buildConfigField "boolean", "USE_CRASHLYTICS", "true"
			ext.enableCrashlytics = true

			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])

	// Crashlytics
	compile('com.crashlytics.sdk.android:crashlytics:2.5.0@aar') {
		transitive = true;
	}

	// Unit testing dependencies
	testCompile 'junit:junit:4.12'
}

/* hook fabric init */
afterEvaluate {
	buildFabricPropertiesIfNeeded()
}

/* build fabric properties file, if missing */
def buildFabricPropertiesIfNeeded() {
	def propertiesFile = file('fabric.properties')
	if (!propertiesFile.exists()) {
		def commentMessage = "This is autogenerated crashlytics property from system environment to prevent key to be committed to source control."
		ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
			entry(key: "apiSecret", value: fabricApiSecret)
			entry(key: "apiKey", value: fabricApiKey)
		}
	}
}